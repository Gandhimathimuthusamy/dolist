{"ast":null,"code":"var wordwrap = module.exports = function (start, stop, params) {\n  if (typeof start === 'object') {\n    params = start;\n    start = params.start;\n    stop = params.stop;\n  }\n  if (typeof stop === 'object') {\n    params = stop;\n    start = start || params.start;\n    stop = undefined;\n  }\n  if (!stop) {\n    stop = start;\n    start = 0;\n  }\n  if (!params) params = {};\n  var mode = params.mode || 'soft';\n  var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n  return function (text) {\n    var chunks = text.toString().split(re).reduce(function (acc, x) {\n      if (mode === 'hard') {\n        for (var i = 0; i < x.length; i += stop - start) {\n          acc.push(x.slice(i, i + stop - start));\n        }\n      } else acc.push(x);\n      return acc;\n    }, []);\n    return chunks.reduce(function (lines, rawChunk) {\n      if (rawChunk === '') return lines;\n      var chunk = rawChunk.replace(/\\t/g, '    ');\n      var i = lines.length - 1;\n      if (lines[i].length + chunk.length > stop) {\n        lines[i] = lines[i].replace(/\\s+$/, '');\n        chunk.split(/\\n/).forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else if (chunk.match(/\\n/)) {\n        var xs = chunk.split(/\\n/);\n        lines[i] += xs.shift();\n        xs.forEach(function (c) {\n          lines.push(new Array(start + 1).join(' ') + c.replace(/^\\s+/, ''));\n        });\n      } else {\n        lines[i] += chunk;\n      }\n      return lines;\n    }, [new Array(start + 1).join(' ')]).join('\\n');\n  };\n};\nwordwrap.soft = wordwrap;\nwordwrap.hard = function (start, stop) {\n  return wordwrap(start, stop, {\n    mode: 'hard'\n  });\n};","map":{"version":3,"names":["wordwrap","module","exports","start","stop","params","undefined","mode","re","text","chunks","toString","split","reduce","acc","x","i","length","push","slice","lines","rawChunk","chunk","replace","forEach","c","Array","join","match","xs","shift","soft","hard"],"sources":["/Users/boopathiraj/dolist/node_modules/wordwrap/index.js"],"sourcesContent":["var wordwrap = module.exports = function (start, stop, params) {\n    if (typeof start === 'object') {\n        params = start;\n        start = params.start;\n        stop = params.stop;\n    }\n    \n    if (typeof stop === 'object') {\n        params = stop;\n        start = start || params.start;\n        stop = undefined;\n    }\n    \n    if (!stop) {\n        stop = start;\n        start = 0;\n    }\n    \n    if (!params) params = {};\n    var mode = params.mode || 'soft';\n    var re = mode === 'hard' ? /\\b/ : /(\\S+\\s+)/;\n    \n    return function (text) {\n        var chunks = text.toString()\n            .split(re)\n            .reduce(function (acc, x) {\n                if (mode === 'hard') {\n                    for (var i = 0; i < x.length; i += stop - start) {\n                        acc.push(x.slice(i, i + stop - start));\n                    }\n                }\n                else acc.push(x)\n                return acc;\n            }, [])\n        ;\n        \n        return chunks.reduce(function (lines, rawChunk) {\n            if (rawChunk === '') return lines;\n            \n            var chunk = rawChunk.replace(/\\t/g, '    ');\n            \n            var i = lines.length - 1;\n            if (lines[i].length + chunk.length > stop) {\n                lines[i] = lines[i].replace(/\\s+$/, '');\n                \n                chunk.split(/\\n/).forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else if (chunk.match(/\\n/)) {\n                var xs = chunk.split(/\\n/);\n                lines[i] += xs.shift();\n                xs.forEach(function (c) {\n                    lines.push(\n                        new Array(start + 1).join(' ')\n                        + c.replace(/^\\s+/, '')\n                    );\n                });\n            }\n            else {\n                lines[i] += chunk;\n            }\n            \n            return lines;\n        }, [ new Array(start + 1).join(' ') ]).join('\\n');\n    };\n};\n\nwordwrap.soft = wordwrap;\n\nwordwrap.hard = function (start, stop) {\n    return wordwrap(start, stop, { mode : 'hard' });\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,OAAO,GAAG,UAAUC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;EAC3D,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;IAC3BE,MAAM,GAAGF,KAAK;IACdA,KAAK,GAAGE,MAAM,CAACF,KAAK;IACpBC,IAAI,GAAGC,MAAM,CAACD,IAAI;EACtB;EAEA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC1BC,MAAM,GAAGD,IAAI;IACbD,KAAK,GAAGA,KAAK,IAAIE,MAAM,CAACF,KAAK;IAC7BC,IAAI,GAAGE,SAAS;EACpB;EAEA,IAAI,CAACF,IAAI,EAAE;IACPA,IAAI,GAAGD,KAAK;IACZA,KAAK,GAAG,CAAC;EACb;EAEA,IAAI,CAACE,MAAM,EAAEA,MAAM,GAAG,CAAC,CAAC;EACxB,IAAIE,IAAI,GAAGF,MAAM,CAACE,IAAI,IAAI,MAAM;EAChC,IAAIC,EAAE,GAAGD,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,UAAU;EAE5C,OAAO,UAAUE,IAAI,EAAE;IACnB,IAAIC,MAAM,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC,CACvBC,KAAK,CAACJ,EAAE,CAAC,CACTK,MAAM,CAAC,UAAUC,GAAG,EAAEC,CAAC,EAAE;MACtB,IAAIR,IAAI,KAAK,MAAM,EAAE;QACjB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACE,MAAM,EAAED,CAAC,IAAIZ,IAAI,GAAGD,KAAK,EAAE;UAC7CW,GAAG,CAACI,IAAI,CAACH,CAAC,CAACI,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGZ,IAAI,GAAGD,KAAK,CAAC,CAAC;QAC1C;MACJ,CAAC,MACIW,GAAG,CAACI,IAAI,CAACH,CAAC,CAAC;MAChB,OAAOD,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;IAGV,OAAOJ,MAAM,CAACG,MAAM,CAAC,UAAUO,KAAK,EAAEC,QAAQ,EAAE;MAC5C,IAAIA,QAAQ,KAAK,EAAE,EAAE,OAAOD,KAAK;MAEjC,IAAIE,KAAK,GAAGD,QAAQ,CAACE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;MAE3C,IAAIP,CAAC,GAAGI,KAAK,CAACH,MAAM,GAAG,CAAC;MACxB,IAAIG,KAAK,CAACJ,CAAC,CAAC,CAACC,MAAM,GAAGK,KAAK,CAACL,MAAM,GAAGb,IAAI,EAAE;QACvCgB,KAAK,CAACJ,CAAC,CAAC,GAAGI,KAAK,CAACJ,CAAC,CAAC,CAACO,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;QAEvCD,KAAK,CAACV,KAAK,CAAC,IAAI,CAAC,CAACY,OAAO,CAAC,UAAUC,CAAC,EAAE;UACnCL,KAAK,CAACF,IAAI,CACN,IAAIQ,KAAK,CAACvB,KAAK,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,GAAG,CAAC,GAC5BF,CAAC,CAACF,OAAO,CAAC,MAAM,EAAE,EAAE,CAC1B,CAAC;QACL,CAAC,CAAC;MACN,CAAC,MACI,IAAID,KAAK,CAACM,KAAK,CAAC,IAAI,CAAC,EAAE;QACxB,IAAIC,EAAE,GAAGP,KAAK,CAACV,KAAK,CAAC,IAAI,CAAC;QAC1BQ,KAAK,CAACJ,CAAC,CAAC,IAAIa,EAAE,CAACC,KAAK,CAAC,CAAC;QACtBD,EAAE,CAACL,OAAO,CAAC,UAAUC,CAAC,EAAE;UACpBL,KAAK,CAACF,IAAI,CACN,IAAIQ,KAAK,CAACvB,KAAK,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,GAAG,CAAC,GAC5BF,CAAC,CAACF,OAAO,CAAC,MAAM,EAAE,EAAE,CAC1B,CAAC;QACL,CAAC,CAAC;MACN,CAAC,MACI;QACDH,KAAK,CAACJ,CAAC,CAAC,IAAIM,KAAK;MACrB;MAEA,OAAOF,KAAK;IAChB,CAAC,EAAE,CAAE,IAAIM,KAAK,CAACvB,KAAK,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;EACrD,CAAC;AACL,CAAC;AAED3B,QAAQ,CAAC+B,IAAI,GAAG/B,QAAQ;AAExBA,QAAQ,CAACgC,IAAI,GAAG,UAAU7B,KAAK,EAAEC,IAAI,EAAE;EACnC,OAAOJ,QAAQ,CAACG,KAAK,EAAEC,IAAI,EAAE;IAAEG,IAAI,EAAG;EAAO,CAAC,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
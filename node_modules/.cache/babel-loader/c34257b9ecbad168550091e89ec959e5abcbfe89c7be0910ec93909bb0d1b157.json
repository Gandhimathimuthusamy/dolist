{"ast":null,"code":"var conversions = require(\"./conversions\");\nvar exports = {};\nmodule.exports = exports;\nfor (var func in conversions) {\n  // export rgb2hslRaw\n  exports[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n    from = pair[1],\n    to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  exports[from] = exports[from] || {};\n  exports[from][to] = exports[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) val[i] = Math.round(val[i]);\n      return val;\n    };\n  }(func);\n}","map":{"version":3,"names":["conversions","require","exports","module","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","val","undefined","i","length","Math","round"],"sources":["/Users/boopathiraj/dolist/node_modules/color/node_modules/color-convert/index.js"],"sourcesContent":["var conversions = require(\"./conversions\");\n\nvar exports = {};\nmodule.exports = exports;\n\nfor (var func in conversions) {\n  // export rgb2hslRaw\n  exports[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  exports[from] = exports[from] || {};\n\n  exports[from][to] = exports[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIC,OAAO,GAAG,CAAC,CAAC;AAChBC,MAAM,CAACD,OAAO,GAAGA,OAAO;AAExB,KAAK,IAAIE,IAAI,IAAIJ,WAAW,EAAE;EAC5B;EACAE,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC,GAAK,UAASA,IAAI,EAAE;IACvC;IACA,OAAO,UAASC,GAAG,EAAE;MACnB,IAAI,OAAOA,GAAG,IAAI,QAAQ,EACxBA,GAAG,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;MAC7C,OAAOV,WAAW,CAACI,IAAI,CAAC,CAACC,GAAG,CAAC;IAC/B,CAAC;EACH,CAAC,CAAED,IAAI,CAAC;EAER,IAAIO,IAAI,GAAG,aAAa,CAACC,IAAI,CAACR,IAAI,CAAC;IAC/BS,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;IACdG,EAAE,GAAGH,IAAI,CAAC,CAAC,CAAC;;EAEhB;EACAT,OAAO,CAACW,IAAI,CAAC,GAAGX,OAAO,CAACW,IAAI,CAAC,IAAI,CAAC,CAAC;EAEnCX,OAAO,CAACW,IAAI,CAAC,CAACC,EAAE,CAAC,GAAGZ,OAAO,CAACE,IAAI,CAAC,GAAI,UAASA,IAAI,EAAE;IAClD,OAAO,UAASC,GAAG,EAAE;MACnB,IAAI,OAAOA,GAAG,IAAI,QAAQ,EACxBA,GAAG,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;MAE7C,IAAIK,GAAG,GAAGf,WAAW,CAACI,IAAI,CAAC,CAACC,GAAG,CAAC;MAChC,IAAI,OAAOU,GAAG,IAAI,QAAQ,IAAIA,GAAG,KAAKC,SAAS,EAC7C,OAAOD,GAAG,CAAC,CAAC;;MAEd,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EACjCF,GAAG,CAACE,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACL,GAAG,CAACE,CAAC,CAAC,CAAC;MAC7B,OAAOF,GAAG;IACZ,CAAC;EACH,CAAC,CAAEX,IAAI,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}